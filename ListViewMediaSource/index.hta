<html>
<head>
<title>Слайдшоу</title>
<hta:application applicationname=slideshow version=1.0
		caption=no sysmenu=no scroll=no scrollflat=no
		innerborder=no border=thin borderStyle=normal
		singleinstance=yes showintaskbar=no
		minimizebutton=yes maximizebutton=no windowstate=maximize
		selection=no contextmenu=yes navigable=no>
<meta http-equiv=msthemecompatible content=yes>
<style>
/*		body{margin:0px;foreground:#FFFFFF;bgcolor:#000000;backgroundColor:#000000;cursor:crosshair;}
		label { display: block; color: WindowText; background-color: Window; margin: 0; padding: 0; width: 100%; }
*/
	 body{
		background-color: #000000; /* Цвет фона веб-страницы */
		color:#FFFFFF;
	 } 
/*		.styleimage1{width:100%;height=100%;filter:revealTrans(duration=1.5,transition=23)}
		.styleimage2{width:100%;height=10%;filter:revealTrans(duration=1.5,transition=23)}
		
*/

</style>
<script>
//Переменные
//Искать в директориях
var ImagesList = new ListMediaSource();
subdir(ImagesList, undefined, true);
//Images
//FindOfSubDir = true;
//-------------------------------------------------------------------------------------------------
function find(array, value)
{

    for (var i = 0; i < array.length; i++) {
        if (array[i] == value) return i;
    }

    return -1;
}


//class ListMediaSource

function MediaSource(Parent, FullPath, Type)
{
    this.Parent = Parent;
    this.FullPath = FullPath;
    this.Type = Type;
}

//-------------------------------------------------------------------------------------------------
function ListMediaSource()
{
    this.Index = 0;
    this.MediaSource = new Object;
    this.add = AddMediaSource;
    this.GetParents = GetListParent;
    this.GetListSource = GetListForParent;
    this.ShowParents = ShowListParent;
    this.ShowList = ShowList;
}

//-------------------------------------------------------------------------------------------------
function GetListForParent(Parent)
{

    //  ViewMode = (DebugMode == undefined) ? false : DebugMode;

    List = new Array();
    for (i = 0; i < this.Index; i++) {

        CurrentParrent = this.MediaSource[i].Parent;
        if (CurrentParrent == Parent)
            List.push(this.MediaSource[i]);

    }

    return List;
}

//-------------------------------------------------------------------------------------------------
function GetListParent() { 

    List = new Array();

    for (i = 0; i < this.Index; i++) {

        CurrentParrent = this.MediaSource[i].Parent;
        if (find(List, CurrentParrent) == -1)
            List.push(CurrentParrent);

    }

    return List;
}

//-------------------------------------------------------------------------------------------------
function ShowListParent()
{
    var TempList = this.GetParents();
    var TextParent = "";
    for (i = 0; i < TempList.length; i++) {
        TextParent = TextParent + TempList[i] + "\r\n";
    }

    alert(TextParent);

}

//-------------------------------------------------------------------------------------------------
function ShowList(MediaSource)
{

    var TextMessage = "";

    if (MediaSource == undefined) {
        for (i = 0; i < this.Index; i++) {

            CurrentParrent = this.MediaSource[i];
            TextMessage = TextMessage
                + CurrentParrent.Parent + "/"
                + CurrentParrent.FullPath + "/"
                + CurrentParrent.Type
                + "\r\n";
        }

    }
    else {
        for (i = 0; i < MediaSource.length; i++) {

            CurrentParrent = MediaSource[i];
            TextMessage = TextMessage
                + CurrentParrent.Parent + "/"
                + CurrentParrent.FullPath + "/"
                + CurrentParrent.Type
                + "\r\n";
        }

    }

    alert(TextMessage);
  
}

//-------------------------------------------------------------------------------------------------
function AddMediaSource(MediaSource)
{
this.MediaSource[this.Index ++] = MediaSource;
}

function SortFileByType(ListMediaSource, path) {

	allfiles = new Enumerator(path.files);
	
  fso=new ActiveXObject('Scripting.fileSystemObject');
  
 while(!allfiles.atEnd()) {
	file=allfiles.item();
	switch(fso.getExtensionName(file.path).toLowerCase())
	{
	 case'jpeg':case'jpg':case'png':case'gif':case'bmp':
    FullPath = new String(file.ParentFolder);
    FullPathLevelUp = new String(fso.GetParentFolderName(file.ParentFolder));
    NameParent = FullPath.substr(FullPathLevelUp.length+1);
   
	  ListMediaSource.add(new MediaSource(NameParent,file.Path,"image"));	

	 break;
		
	 case'mp3':case'wav':case'wave':
	 break;
	}
	allfiles.moveNext();
 }


}


//-------------------------------------------------------------------------------------------------
function subdir(ListMediaSource, Path, FindOfSubDir)
{
	fso=new ActiveXObject('Scripting.fileSystemObject');
	allfiles=new Enumerator(fso.getFolder('.').files);

	var CurrentPath;

	CurrentModeSeek = (FindOfSubDir!=undefined) ? CurrentModeSeek = FindOfSubDir : false;
	CurrentPath = (Path!=undefined) ? CurrentPath = Path : CurrentPath=fso.getFolder('.');


	if (CurrentModeSeek)
	{
	var folder = fso.GetFolder(CurrentPath);
	var subFlds = new Enumerator(folder.SubFolders);
	for (; !subFlds.atEnd(); subFlds.moveNext()) 
		{
		subdirs=subFlds.item();
		SortFileByType(ListMediaSource,CurrentPath);
		subdir(ListMediaSource, subdirs); 
		}
	}
	else
	{
		SortFileByType(ListMediaSource,CurrentPath);
	} 	 
	
}


function init() {




//ImagesList.ShowParents();
//ImagesList.ShowList();

//Tlist = ImagesList.GetListSource(Parent[1]);
//ImagesList.ShowList(Tlist);

//<input type="checkbox" name="vehicle" value="Bike"> I have a bike<br>


//alert(ImagesList.Index);
//alert(ImagesList.MediaSource[0].Parent);
//var TempList = ImagesList.GetParents();
//alert("Temp:" + TempList.length+ "="+ TempList[0]);
//for (i=0;i<TempList.length;i++)
//{alert("@"+TempList[i]);
//}

//ImagesList.add(new MediaSource("full","short","image"));
//alert(ImagesList.MediaSource[0].Parent + ";" + ImagesList.MediaSource[0].FullPath + ";" + ImagesList.MediaSource[0].Type);


//subdir();

//if(!imagefiles.length){alert('\nВ текущей директории риунки не найдены!\n\nЗапустите программу из папки с рисунками.	\n\nПоддерживаемые форматы: JPG, BMP, GIF и PNG.\n\n');close();}

//reloaded();

// start();



}

</script>
</head>
<body Onload="init()">
<script>
Parent = ImagesList.GetParents();
alert(Parent.length);
for (i=0;i<Parent.length;i++)
{
 document.write("<input type='checkbox' name='"+i+ "' value='"+i+ "'>" +Parent [i] + "<br>");
}

</script>

	<!-- input type="checkbox" name="vehicle" value="Bike"> I have a bike<br>
	<input type="checkbox" name="vehicle" value="Car" checked> I have a car<br>
	<input type="submit" value="Submit">
			<!--input type="button" onclick="" value="Play" />
-->
</body>
</html>